{"version":3,"sources":["serviceWorker.js","services/fakeGenreService.js","services/fakeMovieService.js","components/common/likeButton.jsx","components/common/tableHeader.jsx","components/common/tableBody.jsx","components/common/table.jsx","components/moviesTable.jsx","components/common/pagination.jsx","utils/paginate.js","components/common/filter.jsx","components/movies.jsx","index.js"],"names":["Boolean","window","location","hostname","match","genres","_id","name","movies","title","genre","numberInStock","dailyRentalRate","publishDate","liked","LikeButton","props","classes","onClick","style","cursor","className","aria-hidden","TableHeader","raiseSort","path","sortColumn","order","onSort","renderSortIcon","column","this","columns","map","key","label","Component","TableBody","renderCell","item","content","_","get","createKey","data","Table","MoviesTable","movie","onLike","onDelete","Pagination","itemsCount","pageSize","onPageChange","currentPage","pagesCount","Math","ceil","pages","range","page","paginate","items","pageNumber","startIndex","slice","take","value","Filter","onGenreChange","selectedGenre","Movies","state","handleDelete","row","filter","m","setState","handleLike","index","indexOf","console","log","handlePageChange","handleFilterChange","handleSort","getPagedData","allMovies","filtered","orderBy","totalCount","length","g","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ecdebf5d.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const genres = [\n  { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n  { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n  { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" }\n];\n\nexport function getGenres() {\n  return genres.filter(g => g);\n}\n","import * as genresAPI from \"./fakeGenreService\";\n\nconst movies = [\n  {\n    _id: \"5b21ca3eeb7f6fbccd471815\",\n    title: \"Terminator\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 6,\n    dailyRentalRate: 2.5,\n    publishDate: \"2018-01-03T19:04:28.809Z\",\n    liked: true,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471816\",\n    title: \"Die Hard\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 5,\n    dailyRentalRate: 2.5,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471817\",\n    title: \"Get Out\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 8,\n    dailyRentalRate: 3.5,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471819\",\n    title: \"Trip to Italy\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181a\",\n    title: \"Airplane\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181b\",\n    title: \"Wedding Crashers\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181e\",\n    title: \"Gone Girl\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 7,\n    dailyRentalRate: 4.5,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181f\",\n    title: \"The Sixth Sense\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 4,\n    dailyRentalRate: 3.5,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471821\",\n    title: \"The Avengers\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5,\n  },\n];\n\nexport function getMovies() {\n  return movies;\n}\n\nexport function getMovie(id) {\n  return movies.find((m) => m._id === id);\n}\n\nexport function saveMovie(movie) {\n  let movieInDb = movies.find((m) => m._id === movie._id) || {};\n  movieInDb.name = movie.name;\n  movieInDb.genre = genresAPI.genres.find((g) => g._id === movie.genreId);\n  movieInDb.numberInStock = movie.numberInStock;\n  movieInDb.dailyRentalRate = movie.dailyRentalRate;\n\n  if (!movieInDb._id) {\n    movieInDb._id = Date.now();\n    movies.push(movieInDb);\n  }\n\n  return movieInDb;\n}\n\nexport function deleteMovie(id) {\n  let movieInDb = movies.find((m) => m._id === id);\n  movies.splice(movies.indexOf(movieInDb), 1);\n  return movieInDb;\n}\n","import React from \"react\";\n\nconst LikeButton = (props) => {\n  let classes = \"fa fa-heart\";\n  if (!props.liked) classes += \"-o\";\n  return (\n    <i\n      onClick={props.onClick}\n      style={{ cursor: \"pointer\" }}\n      className={classes}\n      aria-hidden=\"true\"\n    ></i>\n  );\n};\n\nexport default LikeButton;\n","import React, { Component } from \"react\";\n\nclass TableHeader extends Component {\n  raiseSort = (path) => {\n    const sortColumn = { ...this.props.sortColumn };\n    if (sortColumn.path === path)\n      sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\n    else {\n      sortColumn.path = path;\n      sortColumn.order = \"asc\";\n    }\n    this.props.onSort(sortColumn);\n  };\n\n  renderSortIcon = (column) => {\n    const { sortColumn } = this.props;\n    if (column.path !== sortColumn.path) return null;\n    if (sortColumn.order === \"asc\") return <i className=\"fa fa-sort-asc\"></i>;\n    return <i className=\"fa fa-sort-desc\"></i>;\n  };\n\n  render() {\n    return (\n      <thead>\n        <tr>\n          {this.props.columns.map((column) => (\n            <th\n              className=\"clickable\"\n              key={column.path || column.key}\n              onClick={() => this.raiseSort(column.path)}\n            >\n              {column.label} {this.renderSortIcon(column)}\n            </th>\n          ))}\n        </tr>\n      </thead>\n    );\n  }\n}\n\nexport default TableHeader;\n","import React, { Component } from \"react\";\nimport _ from \"lodash\";\n\nclass TableBody extends Component {\n  renderCell = (item, column) => {\n    if (column.content) return column.content(item);\n    return _.get(item, column.path);\n  };\n\n  createKey = (item, column) => {\n    return item._id + (column.path || column.key);\n  };\n\n  render() {\n    const { data, columns } = this.props;\n    return (\n      <tbody>\n        {data.map((item) => (\n          <tr key={item._id}>\n            {columns.map((column) => (\n              <td key={this.createKey(item, column)}>\n                {this.renderCell(item, column)}\n              </td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    );\n  }\n}\n\nexport default TableBody;\n","import React from \"react\";\nimport TableHeader from \"./tableHeader\";\nimport TableBody from \"./tableBody\";\n\nconst Table = ({ columns, sortColumn, onSort, data }) => {\n  return (\n    <table className=\"table\">\n      <TableHeader columns={columns} sortColumn={sortColumn} onSort={onSort} />\n      <TableBody data={data} columns={columns} />\n    </table>\n  );\n};\n\nexport default Table;\n","import React, { Component } from \"react\";\nimport LikeButton from \"./common/likeButton\";\nimport Table from \"./common/table\";\n\nclass MoviesTable extends Component {\n  columns = [\n    { path: \"title\", label: \"Title\" },\n    { path: \"genre.name\", label: \"Genre\" },\n    { path: \"numberInStock\", label: \"Stock\" },\n    { path: \"dailyRentalRate\", label: \"Rate\" },\n    {\n      key: \"like\",\n      content: (movie) => (\n        <LikeButton\n          liked={movie.liked}\n          onClick={() => this.props.onLike(movie)}\n        />\n      ),\n    },\n    {\n      key: \"delete\",\n      content: (movie) => (\n        <button\n          className=\"btn btn-danger\"\n          onClick={() => this.props.onDelete(movie)}\n        >\n          Delete\n        </button>\n      ),\n    },\n  ];\n\n  render() {\n    const { movies, onSort, sortColumn } = this.props;\n    return (\n      <Table\n        columns={this.columns}\n        data={movies}\n        sortColumn={sortColumn}\n        onSort={onSort}\n      />\n    );\n  }\n}\n\nexport default MoviesTable;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\n\nconst Pagination = ({ itemsCount, pageSize, onPageChange, currentPage }) => {\n  const pagesCount = Math.ceil(itemsCount / pageSize);\n  if (pagesCount === 1) return null;\n  const pages = _.range(1, pagesCount + 1);\n\n  return (\n    <nav>\n      <ul className=\"pagination\">\n        {pages.map((page) => (\n          <li\n            key={page}\n            className={page === currentPage ? \"page-item active\" : \"page-item\"}\n          >\n            <button className=\"page-link\" onClick={() => onPageChange(page)}>\n              {page}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n\nPagination.propTypes = {\n  itemsCount: PropTypes.number.isRequired,\n  pageSize: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n  currentPage: PropTypes.number.isRequired,\n};\n\nexport default Pagination;\n","import _ from \"lodash\";\n\nexport function paginate(items, pageNumber, pageSize) {\n  const startIndex = (pageNumber - 1) * pageSize;\n  return _(items).slice(startIndex).take(pageSize).value();\n}\n","import React from \"react\";\n\nconst Filter = ({ genres, onGenreChange, selectedGenre }) => {\n  return (\n    <ul className=\"list-group\">\n      {genres.map((genre) => (\n        <li\n          key={genre._id}\n          className={\n            genre === selectedGenre\n              ? \"list-group-item active\"\n              : \"list-group-item\"\n          }\n          style={{ cursor: \"pointer\" }}\n          onClick={() => onGenreChange(genre)}\n        >\n          {genre.name}\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default Filter;\n","import React, { Component } from \"react\";\nimport { getMovies } from \"../services/fakeMovieService\";\nimport { getGenres } from \"../services/fakeGenreService\";\nimport MoviesTable from \"./moviesTable\";\nimport Pagination from \"./common/pagination\";\nimport { paginate } from \"../utils/paginate\";\nimport Filter from \"./common/filter\";\nimport _ from \"lodash\";\n\nclass Movies extends Component {\n  state = {\n    movies: [],\n    genres: [],\n    pageSize: 4,\n    currentPage: 1,\n    sortColumn: { path: \"title\", order: \"asc\" },\n  };\n\n  componentDidMount() {\n    const genres = [{ _id: \"\", name: \"All Genres\" }, ...getGenres()];\n    this.setState({ movies: getMovies(), genres });\n  }\n\n  handleDelete = (row) => {\n    const movies = this.state.movies.filter((m) => m._id !== row._id);\n    this.setState({ movies });\n  };\n\n  handleLike = (movie) => {\n    const movies = [...this.state.movies];\n    const index = movies.indexOf(movie);\n    movies[index] = { ...movies[index] };\n    movies[index].liked = !movies[index].liked;\n    this.setState({ movies });\n\n    console.log(movie);\n  };\n\n  handlePageChange = (page) => {\n    this.setState({ currentPage: page });\n  };\n\n  handleFilterChange = (genre) => {\n    this.setState({ selectedGenre: genre, currentPage: 1 });\n  };\n\n  handleSort = (sortColumn) => {\n    this.setState({ sortColumn });\n  };\n\n  getPagedData = () => {\n    const {\n      pageSize,\n      currentPage,\n      movies: allMovies,\n      selectedGenre,\n      sortColumn,\n    } = this.state;\n    const filtered =\n      selectedGenre && selectedGenre._id\n        ? allMovies.filter((m) => m.genre._id === selectedGenre._id)\n        : allMovies;\n\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n\n    const movies = paginate(sorted, currentPage, pageSize);\n\n    return { totalCount: filtered.length, data: movies };\n  };\n\n  render() {\n    const {\n      pageSize,\n      currentPage,\n      movies: allMovies,\n      genres,\n      selectedGenre,\n      sortColumn,\n    } = this.state;\n\n    if (allMovies.length === 0)\n      return <p>There are no movies in the database</p>;\n\n    const { totalCount, data: movies } = this.getPagedData();\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col\">\n            <p>Showing {totalCount} movies in database</p>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col\">\n            <Filter\n              genres={genres}\n              selectedGenre={selectedGenre}\n              onGenreChange={this.handleFilterChange}\n            />\n          </div>\n          <div className=\"col\">\n            <MoviesTable\n              sortColumn={sortColumn}\n              onSort={this.handleSort}\n              movies={movies}\n              onLike={this.handleLike}\n              onDelete={this.handleDelete}\n            />\n            <Pagination\n              itemsCount={totalCount}\n              pageSize={pageSize}\n              currentPage={currentPage}\n              onPageChange={this.handlePageChange}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Movies;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n// import App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.css\";\nimport Movies from \"./components/movies\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Movies />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}